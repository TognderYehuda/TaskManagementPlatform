@model TaskManagementPlatform.ViewModel.TaskDetailsViewModel

@{
    ViewData["Title"] = "Task Details";
}

<h1>Task Details</h1>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5>@Model.Task.Title</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Type:</dt>
                    <dd class="col-sm-9">@Model.Task.TaskType</dd>

                    <dt class="col-sm-3">Status:</dt>
                    <dd class="col-sm-9">
                        <span class="badge @(Model.Task.IsClosed ? "bg-secondary" : "bg-primary")">
                            @GetStatusDescription(Model.Task.TaskType, Model.Task.CurrentStatus)
                        </span>
                    </dd>

                    <dt class="col-sm-3">Assigned To:</dt>
                    <dd class="col-sm-9">@Model.Task.AssignedUser.Name</dd>

                    <dt class="col-sm-3">Created:</dt>
                    <dd class="col-sm-9">@Model.Task.CreatedAt.ToString("yyyy-MM-dd HH:mm")</dd>

                    @if (Model.Task.IsClosed)
                    {
                        <dt class="col-sm-3">Closed:</dt>
                        <dd class="col-sm-9">@Model.Task.ClosedAt?.ToString("yyyy-MM-dd HH:mm")</dd>
                    }
                </dl>

                @if (Model.Task.CustomFields.Any())
                {
                    <h6>Custom Fields:</h6>
                    <dl class="row">
                        @foreach (var field in Model.Task.CustomFields)
                        {
                            <dt class="col-sm-3">@field.FieldName:</dt>
                            <dd class="col-sm-9">@field.FieldValue</dd>
                        }
                    </dl>
                }
            </div>
        </div>

        @if (!Model.Task.IsClosed)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h5>Change Status</h5>
                </div>
                <div class="card-body">
                    <form asp-action="ChangeStatus" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="TaskId" value="@Model.Task.Id" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">New Status</label>
                                    <select name="NewStatus" class="form-select" onchange="showRequiredFields(this.value)">
                                        <option value="">Select new status...</option>
                                        @{
                                            int maxStatus = Model.Task.TaskType switch
                                            {
                                                "Procurement" => 3,
                                                "Development" => 4,
                                                _ => 1
                                            };
                                        }

                                        @for (int i = 1; i <= maxStatus; i++)
                                        {
                                            if (i == Model.Task.CurrentStatus)
                                            {
                                                <option value="@i" selected>
                                                    @i - @GetStatusDescription(Model.Task.TaskType, i)
                                                </option>
                                            }
                                            else
                                            {
                                                <option value="@i">
                                                    @i - @GetStatusDescription(Model.Task.TaskType, i)
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Assign To</label>
                                    <select name="AssignedUserId" class="form-select">
                                        @foreach (var user in Model.AvailableUsers)
                                        {
                                            if (user.Id == Model.Task.AssignedUserId)
                                            {
                                                <option value="@user.Id" selected>
                                                    @user.Name
                                                </option>
                                            }
                                            else
                                            {
                                                <option value="@user.Id">
                                                    @user.Name
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        @if (Model.Task.TaskType == "Procurement")
                        {
                            <div id="procurementFields">
                                <div class="status-fields" data-status="2">
                                    <h6>Required for Status 2 (Supplier offers received):</h6>
                                    <div class="mb-3">
                                        <label class="form-label">Price Quote 1</label>
                                        <input type="text" name="PriceQuote1" class="form-control" value="@Model.CustomFields.GetValueOrDefault("PriceQuote1")" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Price Quote 2</label>
                                        <input type="text" name="PriceQuote2" class="form-control" value="@Model.CustomFields.GetValueOrDefault("PriceQuote2")" />
                                    </div>
                                </div>
                                <div class="status-fields" data-status="3">
                                    <h6>Required for Status 3 (Purchase completed):</h6>
                                    <div class="mb-3">
                                        <label class="form-label">Receipt</label>
                                        <input type="text" name="Receipt" class="form-control" value="@Model.CustomFields.GetValueOrDefault("Receipt")" />
                                    </div>
                                </div>
                            </div>
                        }

                        @if (Model.Task.TaskType == "Development")
                        {
                            <div id="developmentFields">
                                <div class="status-fields" data-status="2">
                                    <h6>Required for Status 2 (Specification completed):</h6>
                                    <div class="mb-3">
                                        <label class="form-label">Specification</label>
                                        <textarea name="Specification" class="form-control" rows="3">@Model.CustomFields.GetValueOrDefault("Specification")</textarea>
                                    </div>
                                </div>
                                <div class="status-fields" data-status="3">
                                    <h6>Required for Status 3 (Development completed):</h6>
                                    <div class="mb-3">
                                        <label class="form-label">Branch Name</label>
                                        <input type="text" name="BranchName" class="form-control" value="@Model.CustomFields.GetValueOrDefault("BranchName")" />
                                    </div>
                                </div>
                                <div class="status-fields" data-status="4">
                                    <h6>Required for Status 4 (Distribution completed):</h6>
                                    <div class="mb-3">
                                        <label class="form-label">Version Number</label>
                                        <input type="text" name="VersionNumber" class="form-control" value="@Model.CustomFields.GetValueOrDefault("VersionNumber")" />
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="mb-3">
                            <button type="submit" class="btn btn-primary" onclick="debugForm()">Change Status</button>
                        </div>

                        <script>
                            function debugForm() {
                                const form = document.querySelector('form[action*="ChangeStatus"]');
                                const formData = new FormData(form);
                                console.log('Form data:');
                                for (let [key, value] of formData.entries()) {
                                    console.log(key, value);
                                }
                            }
                        </script>
                    </form>
                </div>
            </div>

            @if (Model.Task.CurrentStatus == (Model.Task.TaskType == "Procurement" ? 3 : Model.Task.TaskType == "Development" ? 4 : 1))
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Close Task</h5>
                    </div>
                    <div class="card-body">
                        <p>This task is ready to be closed.</p>
                        <form asp-action="Close" asp-route-id="@Model.Task.Id" method="post">
                            <button type="submit" class="btn btn-success" onclick="return confirm('Are you sure you want to close this task?')">
                                Close Task
                            </button>
                        </form>
                    </div>
                </div>
            }
        }
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>Status History</h5>
            </div>
            <div class="card-body">
                @if (Model.Task.StatusHistory.Any())
                {
                    @foreach (var history in Model.Task.StatusHistory.OrderByDescending(h => h.ChangedAt))
                    {
                        <div class="mb-2">
                            <small class="text-muted">@history.ChangedAt.ToString("yyyy-MM-dd HH:mm")</small><br />
                            <strong>@history.AssignedUser.Name</strong><br />
                            Status: @history.FromStatus → @history.ToStatus<br />
                            @if (!string.IsNullOrEmpty(history.Notes))
                            {
                                <em>@history.Notes</em>
                            }
                        </div>
                        <hr />
                    }
                }
                else
                {
                    <p>No status changes recorded.</p>
                }
            </div>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to Tasks</a>
</div>

@functions {
    private string GetStatusDescription(string taskType, int status)
    {
        if (taskType == "Procurement")
        {
            return status switch
            {
                1 => "Created",
                2 => "Supplier offers received",
                3 => "Purchase completed",
                _ => "Unknown"
            };
        }
        else if (taskType == "Development")
        {
            return status switch
            {
                1 => "Created",
                2 => "Specification completed",
                3 => "Development completed",
                4 => "Distribution completed",
                _ => "Unknown"
            };
        }
        else
        {
            return "Unknown";
        }
    }
}